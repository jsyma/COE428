#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdbool.h>

#define HASH_TABLE_SIZE 1057
typedef struct Entry Entry, *EntryPtr;
struct Entry {
  char * string;
  int count;
};
Entry hash_table[HASH_TABLE_SIZE];

int hash(char * tag){
  int i;
  int sum_char=0;
  int key;
  int str_len = strlen(tag);
  for(i = 0; i< str_len ; i++){
    sum_char = sum_char + *(tag+i);
  }
  key = sum_char % HASH_TABLE_SIZE;
  return key;
}

void add(char * tag)
{
  int key;
  key = hash(tag);
  while(true){
     if(hash_table[key].count == 0){
       hash_table[key].string = tag;
       hash_table[key].count = 1;
     }
     else if(hash_table[key].count != 0) {
       if(hash_table[key].string == tag){
          hash_table[key].count++;
          break;
       }
       else{
         key++;
         key = key % HASH_TABLE_SIZE ;
       }
     }
  }
}

Entry get(char * tag){
    int key;
    Entry obj;
    key = hash(tag);
    while(true){
            if(hash_table[key].string == tag){
                    obj = hash_table[key];
                     break;
                 }
                 else{
                     key++;
                     key = key % HASH_TABLE_SIZE ;
                 }
     }
     return obj;
}
